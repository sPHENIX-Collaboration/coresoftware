stages:
  - test
########################################################################
LCG_99_x86_64-centos7-gcc8-opt:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch"
  image: gitlab-registry.cern.ch/sft/docker:lcg-cc7
  stage: test
  before_script:
    - export LCGPLATFORM=x86_64-centos7-gcc8-opt
    - export LCG_LOCATION=/cvmfs/sft.cern.ch/lcg/releases/LCG_99
    - source /cvmfs/sft.cern.ch/lcg/contrib/gcc/8.2.0/${LCGPLATFORM}/setup.sh
    - source ${LCG_LOCATION}/ROOT/v6.22.06/${LCGPLATFORM}/ROOT-env.sh 
    - export PATH=/cvmfs/sft.cern.ch/lcg/contrib/CMake/latest/Linux-x86_64/bin/:${PATH}
    - export ROOTSYS=${LCG_LOCATION}/ROOT/v6.22.06/${LCGPLATFORM}/
    - source ${LCG_LOCATION}/valgrind/3.16.1/${LCGPLATFORM}/valgrind-env.sh
    - source ${LCG_LOCATION}/graphviz/2.40.1/${LCGPLATFORM}/graphviz-env.sh
    - source ${LCG_LOCATION}/zlib/1.2.11/${LCGPLATFORM}/zlib-env.sh
    - source ${LCG_LOCATION}/Python/3.8.6/${LCGPLATFORM}/Python-env.sh
    - source ${LCG_LOCATION}/HepMC/2.06.11/${LCGPLATFORM}/HepMC-env.sh 
    - source ${LCG_LOCATION}/protobuf/2.5.0/${LCGPLATFORM}/protobuf-env.sh
#LCG 99 calls its variable Protobuf__HOME instead of Protobuf_HOME
    - export Protobuf_ROOT=$(pkg-config protobuf --variable=prefix)
  script:
    - export
    - mkdir build
    - cd build
    - cmake ..  -DHEPMC3_TEST_VALGRIND=ON -DHEPMC3_USE_INTERFACE_FROM_PYTHIA8:BOOL=OFF -DHEPMC3_ENABLE_PYTHON:BOOL=ON -DHEPMC3_PYTHON_VERSIONS=3 -DCMAKE_INSTALL_PREFIX=$(pwd)/install -DHEPMC3_Python_SITEARCH38=$(pwd)/install/lib/python3.8/site-packages -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DPYTHIA8_ROOT_DIR=${LCG_LOCATION}/MCGenerators/pythia8/244/${LCGPLATFORM} -DPHOTOSPP_ROOT_DIR=${LCG_LOCATION}/MCGenerators/photos++/3.64/${LCGPLATFORM}/ -DTAUOLAPP_ROOT_DIR=${LCG_LOCATION}/MCGenerators/tauola++/1.1.8/${LCGPLATFORM}/ -DMCTESTER_ROOT_DIR=${LCG_LOCATION}/MCGenerators/mctester/1.25.0/${LCGPLATFORM}/ -DHEPMC2_ROOT_DIR=${LCG_LOCATION}/HepMC/2.06.11/${LCGPLATFORM}/ -DGRAPHVIZ_ROOT=${LCG_LOCATION}/graphviz/2.40.1/${LCGPLATFORM}/ 
      -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=ON -DProtobuf_INCLUDE_DIR=${Protobuf_ROOT}/include -DProtobuf_LIBRARY=${Protobuf_ROOT}/lib/libprotobuf.so
    - make -j $(nproc)
    - ctest --output-on-failure
    - make -j $(nproc) install


LCG_95_x86_64-centos7-gcc8-opt:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch"
  image: gitlab-registry.cern.ch/sft/docker:lcg-cc7
  stage: test
  before_script:
    - export LCGPLATFORM=x86_64-centos7-gcc8-opt
    - source /cvmfs/sft.cern.ch/lcg/contrib/gcc/8.2.0/${LCGPLATFORM}/setup.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/ROOT/6.16.00/${LCGPLATFORM}/ROOT-env.sh 
    - export PATH=/cvmfs/sft.cern.ch/lcg/contrib/CMake/3.13.4/Linux-x86_64/bin/:${PATH}
    - export ROOTSYS=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/ROOT/6.16.00/${LCGPLATFORM}/
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/valgrind/3.13.0/${LCGPLATFORM}/valgrind-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/graphviz/2.28.0/${LCGPLATFORM}/graphviz-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/zlib/1.2.11/${LCGPLATFORM}/zlib-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/Python/2.7.15/${LCGPLATFORM}/Python-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/protobuf/2.5.0/${LCGPLATFORM}/protobuf-env.sh
#LCG 99 calls its variable Protobuf__HOME instead of Protobuf_HOME
    - export Protobuf_ROOT=$(pkg-config protobuf --variable=prefix)
  script:
    - export
    - mkdir build
    - cd build
    - cmake .. -DHEPMC3_TEST_VALGRIND=ON -DCMAKE_CXX_FLAGS="-Wpedantic -Wall -Wextra" -DHEPMC3_ENABLE_PYTHON:BOOL=ON -DHEPMC3_PYTHON_VERSIONS=2 -DCMAKE_INSTALL_PREFIX=$(pwd)/install -DHEPMC3_Python_SITEARCH27=$(pwd)/install/lib/python2.7/site-packages -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DPYTHIA8_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/pythia8/240/${LCGPLATFORM} -DPHOTOSPP_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/photos++/3.61/${LCGPLATFORM}/ -DTAUOLAPP_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/tauola++/1.1.6/${LCGPLATFORM}/ -DMCTESTER_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/mctester/1.25.0/${LCGPLATFORM}/ -DHEPMC2_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/HepMC/2.06.09/${LCGPLATFORM}/ -DGRAPHVIZ_ROOT=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/graphviz/2.28.0/${LCGPLATFORM}/ 
      -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=ON -DProtobuf_INCLUDE_DIR=${Protobuf_ROOT}/include -DProtobuf_LIBRARY=${Protobuf_ROOT}/lib/libprotobuf.so
    #sourcing python is enough -DPython_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/Python/2.7.15/${LCGPLATFORM}/
    - make -j $(nproc)
    - ctest --output-on-failure
    - make -j $(nproc) install
########################################################################
LCG_95_x86_64-ubuntu1804-gcc8-opt:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch"
  image: gitlab-registry.cern.ch/sft/docker:lcg-ubuntu18
  stage: test
  before_script:
    - export LCGPLATFORM=x86_64-ubuntu1804-gcc8-opt
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/ROOT/6.16.00/${LCGPLATFORM}/ROOT-env.sh
    - export PATH=/cvmfs/sft.cern.ch/lcg/contrib/CMake/3.13.4/Linux-x86_64/bin/:${PATH}
    - export ROOTSYS=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/ROOT/6.16.00/${LCGPLATFORM}/
    - export CXX=/usr/bin/g++-8
    - export CC=/usr/bin/gcc-8
    - export FC=/usr/bin/gfortran-8
    - export LD_LIBRARY_PATH=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/tauola++/1.1.6/${LCGPLATFORM}/lib:${LD_LIBRARY_PATH}
    - export LD_LIBRARY_PATH=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/photos++/3.61/${LCGPLATFORM}/lib/:${LD_LIBRARY_PATH}
    - export LD_LIBRARY_PATH=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/pythia8/240/${LCGPLATFORM}/lib/:${LD_LIBRARY_PATH}
    - export LD_LIBRARY_PATH=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/mctester/1.25.0/${LCGPLATFORM}/lib/:${LD_LIBRARY_PATH}
    - export LD_LIBRARY_PATH=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/HepMC/2.06.09/${LCGPLATFORM}/lib/:${LD_LIBRARY_PATH}
    - export LD_LIBRARY_PATH=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/graphviz/2.28.0/${LCGPLATFORM}/lib/:${LD_LIBRARY_PATH}
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/valgrind/3.13.0/${LCGPLATFORM}/valgrind-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/graphviz/2.28.0/${LCGPLATFORM}/graphviz-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/Python/2.7.15/${LCGPLATFORM}/Python-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/protobuf/2.5.0/${LCGPLATFORM}/protobuf-env.sh
#LCG 99 calls its variable Protobuf__HOME instead of Protobuf_HOME
    - export Protobuf_ROOT=$(pkg-config protobuf --variable=prefix)
  script:
    - export
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_CXX_FLAGS="-Wpedantic -Wall -Wextra" -DHEPMC3_ENABLE_PYTHON:BOOL=ON -DHEPMC3_PYTHON_VERSIONS=2 -DCMAKE_INSTALL_PREFIX=$(pwd)/install -DHEPMC3_Python_SITEARCH27=$(pwd)/install/lib/python2.7/site-packages -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DPYTHIA8_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/pythia8/240/${LCGPLATFORM} -DPHOTOSPP_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/photos++/3.61/${LCGPLATFORM}/ -DTAUOLAPP_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/tauola++/1.1.6/${LCGPLATFORM}/ -DMCTESTER_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/mctester/1.25.0/${LCGPLATFORM}/ -DHEPMC2_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/HepMC/2.06.09/${LCGPLATFORM}/ -DGRAPHVIZ_ROOT=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/graphviz/2.28.0/${LCGPLATFORM}/   
      -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=ON -DProtobuf_INCLUDE_DIR=${Protobuf_ROOT}/include -DProtobuf_LIBRARY=${Protobuf_ROOT}/lib/libprotobuf.so
#sourcing python is enough -DPython_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/Python/2.7.15/${LCGPLATFORM}/
    - make -j $(nproc)
    - ctest --output-on-failure
    - make -j $(nproc) install
########################################################################
debian-salsa:
  only:
    variables:
     - $CI_SERVER_HOST=="salsa.debian.org"
  image: debian:unstable
  stage: test
  before_script:
    - apt-get update 
    - apt-get install -y -qq cmake g++   apt-utils
    - apt-get install -y -qq gfortran  doxygen wget graphviz libz-dev
    - apt-get install -y -qq devscripts build-essential lintian dh-make
    - apt-get install -y -qq libpython-dev python
    - apt-get install -y -qq libpython3-dev python3
    - apt-get install -y -qq dh-python
  script:
    - export
    - rm .gitlab-ci.yml
#    - wget https://gitlab.cern.ch/hepmc/HepMC3/-/archive/3.2.5/HepMC3-3.2.5.tar.gz
    - wget https://gitlab.cern.ch/hepmc/HepMC3/-/archive/master/HepMC3-master.tar.gz
#    - wget https://gitlab.cern.ch/hepmc/HepMC3/-/archive/3.2.0/HepMC3-3.2.0.tar.gz
#    - mv HepMC3-3.2.0.tar.gz  ../hepmc3_3.2.0.orig.tar.gz
    - debuild -us -uc

##########################Templates#####################################
########################################################################
.Fedora: &Fedora
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/ 
  stage: test
########################################################################
.CentOS: &CentOS
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /CentOSCI/ 
  stage: test

########################################################################
.fullbuild:  &fullbuild
    - export
    - mkdir build
    - cd build
    - cmake .. -DHEPMC3_TEST_VALGRIND=ON -DCMAKE_CXX_FLAGS="-Wpedantic -Wall -Wextra" -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=ON -DHEPMC3_ENABLE_ROOTIO:BOOL=ON -DHEPMC3_BUILD_EXAMPLES:BOOL=ON -DHEPMC3_ENABLE_TEST:BOOL=ON -DHEPMC3_TEST_VALGRIND:BOOL=ON -DHEPMC3_ENABLE_PYTHON:BOOL=ON -DHEPMC3_INSTALL_INTERFACES:BOOL=ON -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON -DHEPMC3_BUILD_DOCS:BOOL=ON
    - make -j $(nproc)
    - ctest --output-on-failure 
    - make -j $(nproc) install
########################################################################
.commoninstall: &commoninstall
    - set -x
    - uname -a 
    - cat /etc/issue
    - yum -y install  cmake make binutils sed gawk grep
    - yum -y install  doxygen 
    - yum -y install  valgrind HepMC HepMC-devel xz xz-devel bzip2 bzip2-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root
#    - yum -y install  glibc-debuginfo --enablerepo=*debug*
########################################################################
.pythoninstall: &pythoninstall
    -  yum -y install  python3 python3-devel python2 python2-devel 
########################################################################
.python3install: &python3install
    - yum -y install  python3 python3-devel
########################################################################
.pythonupdate: &pythonupdate
    - dnf -y install python3-dnf-plugin* --allowerasing --skip-broken
    - dnf -y copr enable @python/python3.11 
    - yum -y update  python3 python3-devel python2 python2-devel --enablerepo=*update* --allowerasing --skip-broken
########################################################################
.protobufinstall: &protobufinstall
    -  yum -y install protobuf protobuf-devel
########################################################################
.pypyinstall: &pypyinstall
    -  yum -y install   pypy pypy-devel 
########################################################################
.fixrootcmake: &fixrootcmake
    - sed -i 's@message(FATAL_ERROR \"The imported @message(STATUS \"The imported@g' /usr/share/root/cmake/ROOTConfig-targets.cmake
########################################################################
.clanginstall: &clanginstall
    - yum -y install  clang
########################################################################
.clangexport:  &clangexport
    - export CXX=clang++
    - export CC=clang
########################################################################
.gccinstall: &gccinstall
    - yum -y install  gcc gcc-c++ gcc-gfortran
########################################################################
.gccexport:  &gccexport
    - export CXX=g++
    - export CC=gcc
    - export FC=gfortran
########################################################################
.Fedora-gcc:
  extends: .Fedora
  before_script:
    - *commoninstall
    - *gccinstall
    - *pythoninstall
    - *protobufinstall
  script:
    - *gccexport
    - *fullbuild
########################################################################
.Fedora-clang:
  extends: .Fedora
  before_script:
    - *commoninstall
    - *clanginstall
    - *pythoninstall
    - *protobufinstall
  script:
    - *clangexport
    - *fullbuild

############################The Pipelines###############################
########################################################################
Fedora33-gcc-pypy:
  image: fedora:33
  extends: .Fedora
  before_script:
    - *commoninstall
    - *gccinstall
    - *pythoninstall
    - *pypyinstall
    - *protobufinstall
  script:
    - *gccexport
    - export
    - mkdir build
    - cd build
    - cmake .. -DHEPMC3_ENABLE_ROOTIO:BOOL=ON -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=ON -DHEPMC3_PYTHON_VERSIONS=2,3,pypy2 -DHEPMC3_BUILD_EXAMPLES:BOOL=ON -DHEPMC3_ENABLE_TEST:BOOL=ON -DHEPMC3_TEST_VALGRIND:BOOL=ON -DHEPMC3_ENABLE_PYTHON:BOOL=ON -DHEPMC3_INSTALL_INTERFACES:BOOL=ON -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON -DHEPMC3_BUILD_DOCS:BOOL=ON 
    - make -j $(nproc)
    - ctest --output-on-failure
    - make -j $(nproc) install
########################################################################
Fedora37-gcc-python311:
  image: fedora:37
  extends: .Fedora
  before_script:
    - *commoninstall
    - *gccinstall
    - *pythoninstall
    - *pythonupdate
    - *protobufinstall
  script:
    - *gccexport
    - *fullbuild
########################################################################
Fedora37-gcc:
  image: fedora:37
  extends: .Fedora-gcc
########################################################################
Fedora37-clang:
  image: fedora:37
  extends: .Fedora-clang
########################################################################
Fedora35-gcc:
  image: fedora:35
  extends: .Fedora-gcc
########################################################################
Fedora35-clang:
  image: fedora:35
  extends: .Fedora-clang
########################################################################
Fedora34-gcc:
  image: fedora:34
  extends: .Fedora-gcc
########################################################################
Fedora34-clang:
  image: fedora:34
  extends: .Fedora-clang
########################################################################
Fedora33-gcc:
  image: fedora:33
  extends: .Fedora-gcc
########################################################################
Fedora33-clang:
  image: fedora:33
  extends: .Fedora-clang
########################################################################
Fedora32-gcc:
  image: fedora:32
  extends: .Fedora-gcc
########################################################################
Fedora32-clang:
  image: fedora:32
  extends: .Fedora-clang
#########################################################################
#Fedora31-gcc:
  #image: fedora:31
  #extends: .Fedora-gcc
#########################################################################
#Fedora31-clang:
  #image: fedora:31
  #extends: .Fedora-clang
#########################################################################
#Fedora30-gcc:
  #image: fedora:30
  #extends: .Fedora-gcc
#########################################################################
#Fedora30-clang:
  #image: fedora:30
  #extends: .Fedora-clang
#########################################################################
#Fedora29-gcc:
  #image: fedora:29
  #extends: .Fedora-gcc
#########################################################################
#Fedora29-clang:
  #image: fedora:29
  #extends: .Fedora-clang
#########################################################################
#Fedora28-gcc:
  #image: fedora:28
  #extends: .Fedora-gcc
#########################################################################
#Fedora28-clang:
  #image: fedora:28
  #extends: .Fedora-clang
########################################################################
Fedora27-gcc:
  image: fedora:27
  extends: .Fedora-gcc
########################################################################
Fedora27-clang:
  image: fedora:27
  extends: .Fedora-clang
########################################################################
Fedora26-clang:
  image: fedora:26
  extends: .Fedora
  before_script:
    - *commoninstall
    - *clanginstall
    - *pythoninstall
    - *fixrootcmake
    - *protobufinstall
  script:
    - *clangexport
    - *fullbuild
########################################################################
Fedora26-gcc:
  image: fedora:26
  extends: .Fedora
  before_script:
    - *commoninstall
    - *gccinstall
    - *pythoninstall
    - *fixrootcmake
    - *protobufinstall
  script:
    - *gccexport
    - *fullbuild
########################################################################
Fedora25-clang:
  image: fedora:25
  extends: .Fedora
  before_script:
    - *commoninstall
    - *clanginstall
    - *pythoninstall
    - *fixrootcmake
    - *protobufinstall
  script:
    - *clangexport
#Bad lzma
    - export
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_CXX_FLAGS="-Wpedantic -Wall -Wextra" -DHEPMC3_ENABLE_ROOTIO:BOOL=ON -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=ON -DHEPMC3_TEST_LZMA:BOOL=OFF -DHEPMC3_BUILD_EXAMPLES:BOOL=ON -DHEPMC3_ENABLE_TEST:BOOL=ON -DHEPMC3_TEST_VALGRIND:BOOL=ON -DHEPMC3_ENABLE_PYTHON:BOOL=ON -DHEPMC3_INSTALL_INTERFACES:BOOL=ON -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON -DHEPMC3_BUILD_DOCS:BOOL=ON
    - make -j $(nproc)
    - ctest --output-on-failure 
    - make -j $(nproc) install
########################################################################
Fedora25-gcc:
  image: fedora:25
  extends: .Fedora
  before_script:
    - *commoninstall
    - *gccinstall
    - *pythoninstall
    - *fixrootcmake
    - *protobufinstall
  script:
    - *gccexport
#Bad lzma
    - export
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_CXX_FLAGS="-Wpedantic -Wall -Wextra" -DHEPMC3_ENABLE_ROOTIO:BOOL=ON -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=ON -DHEPMC3_TEST_LZMA:BOOL=OFF -DHEPMC3_BUILD_EXAMPLES:BOOL=ON -DHEPMC3_ENABLE_TEST:BOOL=ON -DHEPMC3_TEST_VALGRIND:BOOL=ON -DHEPMC3_ENABLE_PYTHON:BOOL=ON -DHEPMC3_INSTALL_INTERFACES:BOOL=ON -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON -DHEPMC3_BUILD_DOCS:BOOL=ON
    - make -j $(nproc)
    - ctest --output-on-failure 
    - make -j $(nproc) install
########################################################################
Fedora24-clang:
  image: fedora:24
  extends: .Fedora
  before_script:
    - *commoninstall
    - *clanginstall
    - *pythoninstall
    - *fixrootcmake
    - *protobufinstall
  script:
    - *clangexport
#Bad lzma
    - export
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_CXX_FLAGS="-Wpedantic -Wall -Wextra" -DHEPMC3_ENABLE_ROOTIO:BOOL=ON -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=ON -DHEPMC3_TEST_LZMA:BOOL=OFF -DHEPMC3_BUILD_EXAMPLES:BOOL=ON -DHEPMC3_ENABLE_TEST:BOOL=ON -DHEPMC3_TEST_VALGRIND:BOOL=ON -DHEPMC3_ENABLE_PYTHON:BOOL=ON -DHEPMC3_INSTALL_INTERFACES:BOOL=ON -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON -DHEPMC3_BUILD_DOCS:BOOL=ON
    - make -j $(nproc)
    - ctest --output-on-failure 
    - make -j $(nproc) install
########################################################################
Fedora24-gcc:
  image: fedora:24
  extends: .Fedora
  before_script:
    - *commoninstall
    - *gccinstall
    - *pythoninstall
    - *fixrootcmake
    - *protobufinstall
  script:
    - *gccexport
#Bad lzma
    - export
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_CXX_FLAGS="-Wpedantic -Wall -Wextra" -DHEPMC3_ENABLE_ROOTIO:BOOL=ON -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=ON -DHEPMC3_TEST_LZMA:BOOL=OFF -DHEPMC3_BUILD_EXAMPLES:BOOL=ON -DHEPMC3_ENABLE_TEST:BOOL=ON -DHEPMC3_TEST_VALGRIND:BOOL=ON -DHEPMC3_ENABLE_PYTHON:BOOL=ON -DHEPMC3_INSTALL_INTERFACES:BOOL=ON -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON -DHEPMC3_BUILD_DOCS:BOOL=ON
    - make -j $(nproc)
    - ctest --output-on-failure 
    - make -j $(nproc) install
########################################################################
Fedora23-clang-noroot-nopython-noprotobuf:
  image: fedora:23
  extends: .Fedora
  before_script:
    - *commoninstall
    - *clanginstall
    - *pythoninstall
#We have ROOT5 here
  script:
    - export
#Bad lzma
    - mkdir build
    - cd build
    - *clangexport
    - cmake .. -DCMAKE_CXX_FLAGS="-Wpedantic -Wall -Wextra" -DHEPMC3_ENABLE_ROOTIO:BOOL=OFF -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=OFF -DHEPMC3_TEST_LZMA:BOOL=OFF -DHEPMC3_BUILD_EXAMPLES:BOOL=ON -DHEPMC3_ENABLE_TEST:BOOL=ON -DHEPMC3_TEST_VALGRIND:BOOL=ON -DHEPMC3_ENABLE_PYTHON:BOOL=OFF -DHEPMC3_INSTALL_INTERFACES:BOOL=ON -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON -DHEPMC3_BUILD_DOCS:BOOL=ON 
    - make -j $(nproc)
    - ctest --output-on-failure
    - make -j $(nproc) install 
########################################################################
Fedora23-gcc-noroot-nopython-noprotobuf:
  image: fedora:23
  extends: .Fedora
  before_script:
    - *commoninstall
    - *gccinstall
    - *pythoninstall
#We have ROOT5 here
  script:
    - export
#Bad lzma
    - mkdir build
    - cd build
    - *gccexport
    - cmake ..  -DCMAKE_CXX_FLAGS="-Wpedantic -Wall -Wextra" -DHEPMC3_ENABLE_ROOTIO:BOOL=OFF -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=OFF -DHEPMC3_TEST_LZMA:BOOL=OFF -DHEPMC3_BUILD_EXAMPLES:BOOL=ON -DHEPMC3_ENABLE_TEST:BOOL=ON -DHEPMC3_TEST_VALGRIND:BOOL=ON -DHEPMC3_ENABLE_PYTHON:BOOL=OFF -DHEPMC3_INSTALL_INTERFACES:BOOL=ON -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON -DHEPMC3_BUILD_DOCS:BOOL=ON 
    - make -j $(nproc)
    - ctest --output-on-failure 
    - make -j $(nproc) install
########################################################################
CentOS7-gcc:
  extends: .CentOS
  image: centos:7
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
    - yum -y install epel-release
    - yum -y install  cmake3    
    - *commoninstall
    - *gccinstall
    - *pythoninstall 
    - *protobufinstall
    - yum -y install  python34 python34-devel
  script:
    - export
    - mkdir build
    - cd build
    - *gccexport
    - cmake3 .. -DCMAKE_CXX_FLAGS="-Wpedantic -Wall -Wextra" -DHEPMC3_PYTHON_VERSIONS=2,3.4,3.6  -DHEPMC3_ENABLE_ROOTIO:BOOL=ON -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=ON -DHEPMC3_BUILD_EXAMPLES:BOOL=ON -DHEPMC3_ENABLE_TEST:BOOL=ON -DHEPMC3_TEST_VALGRIND:BOOL=ON -DHEPMC3_ENABLE_PYTHON:BOOL=ON -DHEPMC3_INSTALL_INTERFACES:BOOL:BOOL=ON -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON -DHEPMC3_BUILD_DOCS:BOOL=ON
    - make -j $(nproc)
    - ctest --output-on-failure
    - make -j $(nproc) install
########################################################################
CentOS7-clang:
  extends: .CentOS
  image: centos:7
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
    - yum -y install epel-release
    - yum -y install  cmake3    
    - *commoninstall
    - *clanginstall
    - *pythoninstall 
    - *protobufinstall
    - yum -y install  python34 python34-devel
  script:
    - *clangexport
    - export
    - mkdir build
    - cd build
    - cmake3 .. -DCMAKE_CXX_FLAGS="-Wpedantic -Wall -Wextra" -DHEPMC3_PYTHON_VERSIONS=2,3.4,3.6  -DHEPMC3_ENABLE_ROOTIO:BOOL=ON -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=ON -DHEPMC3_BUILD_EXAMPLES:BOOL=ON -DHEPMC3_ENABLE_TEST:BOOL=ON -DHEPMC3_TEST_VALGRIND:BOOL=ON -DHEPMC3_ENABLE_PYTHON:BOOL=ON -DHEPMC3_INSTALL_INTERFACES:BOOL:BOOL=ON -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON -DHEPMC3_BUILD_DOCS:BOOL=ON
    - make -j $(nproc)
    - ctest --output-on-failure 
    - make -j $(nproc) install
########################################################################
CentOS8s-gcc:
  extends: .CentOS
  image: quay.io/centos/centos:stream8
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
    - yum -y install epel-release epel-next-release libarchive
    - dnf -y install 'dnf-command(config-manager)'
    - dnf config-manager --set-enabled powertools  
    - dnf config-manager --set-enabled appstream  
    - dnf config-manager --set-enabled epel-testing    
    - yum -y install json-devel
    - rpm -i http://ftp.tu-chemnitz.de/pub/linux/centos/8-stream/BaseOS/x86_64/os/Packages/zlib-devel-1.2.11-17.el8.x86_64.rpm --nodeps
    - *commoninstall
    - *clanginstall
    - *pythoninstall 
    - *protobufinstall
  script:
    - *gccexport
    - *fullbuild
########################################################################
CentOS8s-clang:
  extends: .CentOS
  image: quay.io/centos/centos:stream8
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
    - yum -y install epel-release epel-next-release libarchive
    - dnf -y install 'dnf-command(config-manager)'
    - dnf config-manager --set-enabled powertools  
    - dnf config-manager --set-enabled appstream  
    - dnf config-manager --set-enabled epel-testing
    - yum -y install json-devel 
    - rpm -i http://ftp.tu-chemnitz.de/pub/linux/centos/8-stream/BaseOS/x86_64/os/Packages/zlib-devel-1.2.11-17.el8.x86_64.rpm --nodeps
    - *commoninstall
    - *clanginstall
    - *pythoninstall 
    - *protobufinstall
  script:
    - *clangexport
    - *fullbuild
########################################################################
CentOS9s-gcc:
  extends: .CentOS
  image: quay.io/centos/centos:stream9
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
    - yum -y install epel-release libarchive
    - dnf -y install 'dnf-command(config-manager)'
    - dnf config-manager --set-enabled crb  
    - dnf config-manager --set-enabled epel-testing    
    - yum -y install json-devel
    - *commoninstall
    - *clanginstall
    - *python3install 
    - *protobufinstall
  script:
    - *gccexport
    - *fullbuild
########################################################################
CentOS9s-clang:
  extends: .CentOS
  image: quay.io/centos/centos:stream9
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
    - yum -y install epel-release libarchive
    - dnf -y install 'dnf-command(config-manager)'
    - dnf config-manager --set-enabled crb  
    - dnf config-manager --set-enabled epel-testing
    - yum -y install json-devel 
    - *commoninstall
    - *clanginstall
    - *python3install 
    - *protobufinstall
  script:
    - *clangexport
    - *fullbuild
########################################################################
